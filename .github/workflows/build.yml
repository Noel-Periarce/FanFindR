name: Build Portable Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --icon=letter-f.ico --name="FanFinder" --add-data "firebase-key.json;." --add-data "letter-f.ico;." app.py
        
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: FanFinder-Windows
        path: dist/FanFinder.exe

  build-macos:
    runs-on: macos-13
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build macOS application
      run: |
        pyinstaller --onefile --windowed --icon=letter-f.icns --name="FanFinder" --add-data "firebase-key.json:." --add-data "letter-f.icns:." app.py
        
    - name: Upload macOS application
      uses: actions/upload-artifact@v4
      with:
        name: FanFinder-macOS
        path: dist/FanFinder.app

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --windowed --icon=letter-f.png --name="FanFinder" --add-data "firebase-key.json:." --add-data "letter-f.png:." app.py
        
    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: FanFinder-Linux
        path: dist/FanFinder
